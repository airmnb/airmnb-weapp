<style lang="less">
page {
	padding: 0;
}
</style>

<template>
  <view>
    <view class="" style="position:relative;">
      <scroll-view scroll-x="true" class="tab-h">
        <view class="tab-item {{currentTab==0?'active':''}}" data-current="0" bindtap="switchNav">
          <text data-current="0" class="tab-item-label">{{i.mine_ongoing}}</text>
        </view>
        <view class="tab-item {{currentTab==1?'active':''}}" data-current="1" bindtap="switchNav">
          <text data-current="1" class="tab-item-label">{{i.mine_favorites}}</text>
        </view>
        <view class="tab-item {{currentTab==2?'active':''}}" data-current="2" bindtap="switchNav">
          <text data-current="2" class="tab-item-label">{{i.mine_mycomments}}</text>
        </view>
        <view class="tab-item {{currentTab==3?'active':''}}" data-current="3" bindtap="switchNav">
          <text data-current="3" class="tab-item-label">{{i.mine_history}}</text>
        </view>
      </scroll-view>
      <swiper current="{{currentTab}}" duration="300" style="height:{{swiperHeight}}rpx;" bindchange="switchTab">
        <swiper-item wx:for="{{[0,1,2,3]}}" wx:key="{{index}}">
            <scroll-view scroll-y="true" class="scoll-h activity-panel">
              <view class="list-no-content" wx:if="{{!activities || !activities.length}}">{{i.list_no_content}}</view>
							<repeat for="{{activities}}">
								<activityBar wx:if="{{!loading}}" :style="'bar'"
								 :navigateTo="'/pages/search/view_activity?activityId=' + item.activityId" :activity.sync="item"></activityBar>
							</repeat>
            </scroll-view>
        </swiper-item>
      </swiper>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import amb from '@/util/amb'
import activityService from '@/util/activityService';
import purchaseService from '@/util/purchaseService';
import ActivityBar from '../components/activityBar'
// import favoriteService from '@/util/favoriteService';

export default class Mine extends wepy.page {
  config = {
		enablePullDownRefresh: true
	};
	components = {
		activityBar: ActivityBar
	}
  data = {
    i: amb.pageI18nData,
		activities: null,
		currentTab: 0,
		swiperHeight: 1000,
		loading: false,
  }
  methods = {
		switchTab(e) {
			this.loadTabData(e.detail.current);
		},
		switchNav(e) {
			this.loadTabData(e.target.dataset.current);
		},
  };
  async loadTabData(tabIndex) {
		if(this.currentTab == tabIndex) return;
		this.updateData({
				currentTab: tabIndex,
		});
		await this.refresh(false);
		this.loading = false;
	}
  onLoad() {
    this.setPageUx('mine_title');
		this.refresh(false);
		this.adjectListHeight();
  }
  onShow() {
    this.setPageUx('mine_title');
		this.refresh(false);
  }
  onPullDownRefresh() {
		this.refresh(true);
  }
  async adjectListHeight(){
		const res = await wepy.getSystemInfo();
		const clientHeight = res.windowHeight;
		const clientWidth = res.windowWidth;
		const rpxR = 750 / clientWidth;
    const calc = clientHeight * rpxR - 180;
		this.updateData({
			'swiperHeight': calc
		});
  }
  async refresh(force = true) {
		const tabIndex = parseInt(this.currentTab);
		wepy.showLoading();
		this.updateData({
			loading: true
		});
    let activities = null;
    let purchases = null;
    console.log('tab', tabIndex)
    switch (tabIndex) {
      case 0:
        // Mine ongoing
        purchases = await purchaseService.getOngoing(force);
        activities = purchases.map(p => p.activity);
        break;
      case 1:
        // My favoriates
			  activities = await activityService.getMyFavorites(force);
        break;
      case 2:
        // My comments
			  activities = await activityService.getClosed(force);
        break;
      case 3:
        // My history
        purchases = await purchaseService.getClosed(force);
        activities = purchases.map(p => p.activity);
        break;
      default:
        activities = []
        console.log(`${tabIndex} isn't supported`);
    }
    activities = activityService.setAvatarImageUrl(activities);

		this.updateData({
			activities: activities,
			loading: false
		});
		wepy.stopPullDownRefresh();
		wepy.hideLoading();
	}
}
</script>
