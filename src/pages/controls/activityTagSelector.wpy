<style lang="less">
</style>

<template>
  <view>
    <form bindsubmit="onsave">
      <view class="panel">
        <view class="panel-item">
          {{i.dow_mon}}<switch checked="{{value & 1}}" bindchange="toggle(1)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_tue}}<switch checked="{{value & 2}}" bindchange="toggle(2)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_wed}}<switch checked="{{value & 4}}" bindchange="toggle(4)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_thu}}<switch checked="{{value & 8}}" bindchange="toggle(8)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_fri}}<switch checked="{{value & 16}}" bindchange="toggle(16)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_sat}}<switch checked="{{value & 32}}" bindchange="toggle(32)" color="#D81B60"/>
        </view>
        <view class="panel-item">
          {{i.dow_sun}}<switch checked="{{value & 64}}" bindchange="toggle(64)" color="#D81B60"/>
        </view>
      </view>
      <view class="panel">
        <view class="panel-item">
          <button formType="submit">{{i.button_ok}}</button>
        </view>
      </view>
    </form>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  
  export default class ActivityTagSelector extends wepy.page {
    config = {
    }

    data = {
      key: undefined,
      // value: 0,
      i: amb.pageI18nData
    }

    methods = {
      toggle(v) {
        this.value ^= v; // toggle bit
        console.log(v, this.value, this.value.toString(2));
      },
      onsave(e){
        this.updateParentData(this.value);
      }
    }

    onLoad(options) {
      this.key = options.key || '';
      const value = parseInt(options.value || 0);

      this.updateData({
        value: value
      });
      wepy.setNavigationBarTitle({title: 'dow_title'.i18n}); 
    }

    updateParentData(value) {
      const pages = getCurrentPages();
      const prePage = pages[pages.length - 2];
      const key = this.key;
      // prePage.$wepypage.updateData({
      //   [key]: value
      // }); // Update parent page's data
      // prePage.$wepypage.$apply();
      prePage.updateData({
        [key]: value
      }); // Update parent page's data
      // prePage.$wepypage.$apply();
      wepy.navigateBack();
    }
  }
</script>
