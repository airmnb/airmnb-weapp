<style lang="less">


</style>

<template>
  <view>
    <view class="panel">
      <navigator url="/pages/controls/input?key=venue.name&value={{venue.name}}&label={{i.venue_name}}" 
      hover-class="navigator-hover">{{i.venue_name}}<text class="value">{{venue.name}}</text>
      </navigator>
    </view>
    <view class="panel">
      <navigator url="/pages/controls/input?key=venue.addr1&value={{venue.addr1}}&label={{i.venue_addr1}}" 
        hover-class="navigator-hover">{{i.venue_addr1}}<text class="value">{{venue.addr1}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.addr2&value={{venue.addr2}}&label={{i.venue_addr2}}" 
        hover-class="navigator-hover">{{i.venue_addr2}}<text class="value">{{venue.addr2}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.addr3&value={{venue.addr3}}&label={{i.venue_addr3}}" 
        hover-class="navigator-hover">{{i.venue_addr3}}<text class="value">{{venue.addr3}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.city&value={{venue.city}}&label={{i.venue_city}}" 
        hover-class="navigator-hover">{{i.venue_city}}<text class="value">{{venue.city}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.state&value={{venue.state}}&label={{i.venue_state}}" 
        hover-class="navigator-hover">{{i.venue_state}}<text class="value">{{venue.state}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.country&value={{venue.country}}&label={{i.venue_country}}" 
        hover-class="navigator-hover">{{i.venue_country}}<text class="value">{{venue.country}}</text>
      </navigator>
      <navigator url="/pages/controls/input?key=venue.postcode&value={{venue.postcode}}&label={{i.venue_postcode}}" 
        hover-class="navigator-hover">{{i.venue_postcode}}<text class="value">{{venue.postcode}}</text>
      </navigator>
      <navigator url="/pages/controls/textarea?key=venue.info&value={{venue.info}}&label={{i.venue_info}}" 
        hover-class="navigator-hover">{{i.venue_info}}
        <text class="value text-elipsis">{{venue.info}}</text>
      </navigator>
    </view>
    <view class="panel">
      <view class="panel-item">
        <button @tap="save">{{i.button_save}}</button>
      </view>
    </view>

    <view class="panel" wx:if="{{!addMode}}">
      <view class="panel-item warning">
        <button @tap="delete">{{i.button_delete}}</button>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import amb from '@/util/amb';
import UPNG from 'upng-js'
import imageService from '@/util/imageService'
import venueService from '@/util/venueService'

export default class AddVenue extends wepy.page {
	data = {
    addMode: false,
    i: amb.pageI18nData,
    venue: {
      name: '',
      addr1: '',
      addr2: '',
      addr3: '',
      city: '',
      state: '',
      country: '',
      postcode: '',
      info: '',
    },
  }
  methods = {
    async save() {
      wepy.showLoading();
      console.log('venue to save', this.venue)
      try{
        if(this.addMode){
          await venueService.add(this.venue)
        }else {
          await venueService.update(this.venue)
        }

        // Refresh parent page
        const pages = getCurrentPages();
        const parentPage = pages[pages.length-2];
        parentPage.refresh();

        wepy.hideLoading();
        wepy.navigateBack();
      }catch(e){
        wepy.hideLoading();
        console.log('error', e);
        await wepy.showModal({
          title: e.message
        });
      }
    },
    async delete(){
      const result = await wepy.showModal({
        title: amb.pageI18nData.baby_delete_confirm,
        content: '',
      })
      if(result.cancel) return;
      wepy.showLoading();
      console.log('venue to delete', this.baby);
      await venueService.delete(this.venue.venueId);

      // Refresh parent page
      const pages = getCurrentPages();
      const parentPage = pages[pages.length-2];
      parentPage.refresh();
  
      wepy.hideLoading();
      wepy.navigateBack();
    }
  }
  async loadVenue(venueId) {
    wepy.showLoading();
    try {
      const venue = await venueService.get(venueId);
      this.updateData({
        venue: venue
      })
    } finally {
      wepy.hideLoading()
    }
  }
	onLoad(options) {
    const venueId = options.venueId
    this.addMode = !venueId;
    console.log('edit venue addMode?', this.addMode)
		wepy.setNavigationBarTitle({
			title: this.addMode ? 'venue_add'.i18n : 'venue_edit'.i18n
    });
    if(!this.addMode) {
      this.loadVenue(venueId);
    }
  }
}
</script>
