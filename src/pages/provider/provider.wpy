<style lang="less">

.activity-panel {
  width: 100%;
  display: flex;
  flex-direction: column;
  background-color: white;

  .activity-card {
    margin: 20rpx 0 20rpx 0;
    flex: 100%;
    display: flex;
    align-items: flex-start;

    .activity-avatar{
      height: 240rpx;
      // border-radius: 10rpx;
      flex: 0 0 240rpx;
    }

    .activity-content {
      // flex: 100%;
      margin-left: 10rpx;
      display: flex;
      flex-direction: column;
    }
  }
}
</style>

<template>
  <view>
    <view class="panel">
      <navigator url="/pages/provider/venues" hover-class="navigator-hover">{{i.provider_venues}}</navigator>
    </view>
    <view class="panel">
      <navigator url="/pages/provider/edit_activity" hover-class="navigator-hover">{{i.provider_newactivity}}</navigator>
      <navigator url="/pages/provider/history" class="last-navigator" hover-class="navigator-hover">{{i.provider_history}}</navigator>
    </view>

    <text class="sub-title">{{i.provider_ongoing}}</text>
    <view class="activity-panel"> 
      <navigator url="/pages/provider/edit_activity?activityId={{a.activityId}}" 
      wx:for="{{activities}}" wx:key="index" wx:for-item="a">
      <view class="activity-card" >
        <image class="activity-avatar" src="{{a.avatarImageUrl}}" mode="aspectFill" />
        <view class="activity-content">
          <text class="secondary-text">{{a.name}}</text>
          <text class="info-text">{{a.info}}</text>
          <text class="info-text">{{a.start}} - {{a.end}}</text>
          <text class="info-text">{{a.start}} - {{a.end}}</text>
        </view>
        </view>
      </navigator>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  import activityService from '@/util/activityService'
  import imageService from '@/util/imageService'
  export default class Index extends wepy.page {
    config = {
      enablePullDownRefresh: true,
    }
    data = {
      i: amb.pageI18nData,
      activities: null,
    }
    async onLoad() {
      wepy.setNavigationBarTitle({
        title: amb.pageI18nData.provider_title
      });

      this.refresh()
    }
    onPullDownRefresh() {
      this.refresh();
    }
    async refresh(){
      wepy.showLoading();
      const activities = await activityService.getOngoing();
      this.attachAvatarImageUrl(activities);
      this.updateData({
        'activities': activities
      });
      wepy.stopPullDownRefresh();
      wepy.hideLoading();
    }
    attachAvatarImageUrl(activities) {
      activities.forEach(x => {
        if(x.imageIds && x.imageIds.length) {
          x.avatarImageUrl = imageService.getSrcUrl(x.imageIds[0]);
        }
        x.avatarImageUrl = imageService.getSrcUrl('d38da205-a2bc-4510-a3e0-3734b6c4f116');
        
      });
    }
  }
</script>
