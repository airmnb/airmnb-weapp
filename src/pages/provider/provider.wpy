<style lang="less">
@primary: #FFCC00;
@primary-transparent: rgba(255, 204, 0, 0.8);
@primary-dark: #BB9900;

page {
	padding: 0;

	& > view {
		position: relative;
		height: 100%;
	}
}
.activity-panel {
	width: 100%;
	display: flex;
	flex-direction: column;
	background-color: white;

  navigator {
    padding: 0;
    border: none;
  }
  navigator::after {
    content: '';
  }
}

swiper {
  height: 1000rpx;
  width: 100%;
}

.float-button {
	position: absolute;
	bottom: 40rpx;
	width: 100rpx;
	height:100rpx;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;

	image {
		width: 40rpx;
		height: 40rpx;
	}
}

.button-add {
	right: 40rpx;	
}

.button-scan {
	right: 160rpx;	
}
</style>

<template>
  <view>
    <view class="" style="position:relative;">
      <scroll-view scroll-x="true" class="tab-h">
        <view class="tab-item {{currentTab==0?'active':''}}" data-current="0" bindtap="switchNav">
          <text data-current="0" class="tab-item-label">{{i.provider_ongoing}}</text>
        </view>
        <view class="tab-item {{currentTab==1?'active':''}}" data-current="1" bindtap="switchNav">
          <text data-current="1" class="tab-item-label">{{i.provider_history}}</text>
        </view>
      </scroll-view>
      <swiper current="{{currentTab}}" duration="300" style="height:{{swiperHeight}}rpx;" bindchange="switchTab">
        <swiper-item wx:for="{{[0,1]}}" wx:key="{{index}}">
            <scroll-view scroll-y="true" class="scroll-h activity-panel">
              <view class="list-no-content" wx:if="{{!activities || !activities.length}}">{{i.list_no_content}}</view>
							<repeat for="{{activities}}">
								<activityBar wx:if="{{!loading}}" :style="'bar'"
								 :navigateTo="'/pages/provider/edit_activity?activityId=' + item.activityId" :activity.sync="item"></activityBar>
							</repeat>
            </scroll-view>
        </swiper-item>
      </swiper>
    </view>
    <view class="button-add float-button float-widget" @tap="add">
      <image src="../../icons/plus.svg"/>
		</view>
		<view class="button-scan float-button float-widget" @tap="scanQrcode">
      <image src="../../icons/qrcode.svg"/>
		</view>
  </view>
</template>
<script>
import wepy from 'wepy';
import amb from '@/util/amb';
import activityService from '@/util/activityService';
import providerService from '@/util/providerService';
import purchaseService from '@/util/purchaseService';
import ActivityBar from '../components/activityBar'

export default class Index extends wepy.page {
	config = {
		enablePullDownRefresh: true
	};
	components = {
		activityBar: ActivityBar
	}
	data = {
		i: amb.pageI18nData,
		activities: null,
		currentTab: 0, //预设当前项的值
		swiperHeight: 1000,
		loading: false,
	};
	methods = {
		switchTab(e) {
			this.loadTabData(e.detail.current);
		},
		// 点击标题切换当前页时改变样式
		switchNav(e) {
			this.loadTabData(e.target.dataset.current);
		},
		add(){
			wepy.navigateTo({
				url: '/pages/provider/edit_activity'
			})
		},
		async scanQrcode(e){
			const ret = await wepy.scanCode({
				onlyFromCamera: false
			});
			const purchaseId = ret.result;
			try{
				await purchaseService.confirm(purchaseId);
				this.msg(this.i.provider_scan_success)
			}catch(e) {
				this.msg(e);
			}
		}
	};
	async loadTabData(tabIndex) {
		if(this.currentTab == tabIndex) return;
		this.updateData({
				currentTab: tabIndex,
		});
		await this.refresh(false);
		this.loading = false;
	}
	async onLoad() {
		this.setPageUx('provider_title');
		this.refresh(false);
		this.adjectListHeight();
	}
	onShow() {
		this.setPageUx('provider_title');
		this.checkValidProvider();
		amb.i18nTabbar();
	}
	onPullDownRefresh() {
		this.refresh(true);
	}
	async checkValidProvider(){
		const userId = amb.config.user.userId;
		try{
			await providerService.get(userId);
		}catch(e){
			wepy.navigateTo({url: '/pages/provider/provider_profile'});
		}
	}
  async adjectListHeight(){
		const res = await wepy.getSystemInfo();
		const clientHeight = res.windowHeight;
		const clientWidth = res.windowWidth;
		const rpxR = 750 / clientWidth;
		const calc = clientHeight * rpxR - 80;
		this.updateData({
			'swiperHeight': calc
		});
  }
	async refresh(force = true) {
		const tabIndex = this.currentTab;
		wepy.showLoading();
		this.updateData({
			loading: true
		});
		let activities = null;
		console.log('tab', tabIndex)
		if(tabIndex == 1) {
			// Closed activities
			activities = await activityService.getClosed(force);
		}else{
			// Ongoing activities
			activities = await activityService.getOngoing(force);
		}
		this.updateData({
			activities: activities,
			loading: false
		});
		wepy.stopPullDownRefresh();
		wepy.hideLoading();
	}
}
</script>
