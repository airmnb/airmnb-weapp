<style lang="less">
@gray: #EFEFEF;
@secondary-dark: #0D47A1;
@gray-dark: #888888;
.panel {
  navigator::after {
    content: '';
  }
}
.venue-card {
  width: 100%;
  padding: 10rpx 0 10rpx 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  .venue-name {
    width: 100%;
    color: @secondary-dark;
    font-weight: bold;
  }

  .venue-address {
    font-size: 0.6rem;
    color: @gray-dark;
    text-overflow: ellipsis;
    overflow: hidden;
    width: 700rpx; 
    white-space: nowrap;
  }
  .venue-info {
    justify-content: left;
    white-space: normal;
  }
}
</style>

<template>
  <view>
    <view class="panel">
      <navigator url="/pages/provider/edit_venue" class="last-navigator" 
        hover-class="navigator-hover">{{i.venue_add}}</navigator>
    </view>
    <text class="sub-title">{{i.venues_mine}}</text>
    <view class="panel">
      <navigator url="/pages/provider/edit_venue?venueId={{venue.venueId}}"  wx:for="{{venues}}" wx:key="index" wx:for-item="venue">
        <view class="venue-card">
          <view class="venue-name" wx:if="{{venue.name}}">{{venue.name}}</view>
          <view class="venue-address">{{venue.addr1}}{{venue.addr2 || ''}}{{venue.addr3 || ''}} {{venue.city || ''}} {{venue.state || ''}} {{venue.country || ''}} {{venue.postcode || ''}}</view>
          <view wx:if="{{venue.info}}" class="venue-info">{{venue.info}}</view>
        </view>
      </navigator>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  import venueService from '@/util/venueService'
  import imageService from '@/util/imageService'

  export default class Venues extends wepy.page {
    config = {
      enablePullDownRefresh: true,
    }
    data = {
      i: amb.pageI18nData,
      venues: [],
    }
    onLoad() {
  		this.setPageUx('venues_title');
      this.refresh();
    }
    onPullDownRefresh() {
      this.refresh();
    }
    async refresh(){
      wepy.showLoading();
      const venues = await venueService.getMine();
      // venues.forEach(x => {
      //   x.avatarSrcUrl = imageService.getSrcUrl(x.avatarImageId);
      // })
      this.updateData({
        venues: venues
      })
      wepy.stopPullDownRefresh();
      wepy.hideLoading();
    }
  }
</script>
