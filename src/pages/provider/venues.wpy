<style lang="less">
@gray: #D5D5D5;
.venue-panel {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: left;
  flex-wrap: wrap;
  justify-content: flex-start;
}
.venue-avatar {
  width: 33%;
  position: relative;
  top: 0;
  left: 0;

  .venue-card {
    margin: 20rpx;
    width: 200rpx;
    height: 200rpx;
    border-radius: 10rpx;

    &.venue-placeholder {

      outline: 2rpx dashed @gray;
      outline-offset: -2rpx;
      display: flex;
      align-items: center;
      justify-content: center;
      color: @gray;
    }

    &.venue-image {
      position: absolute;
      top: 0;
      left: 0;
      width: 200rpx;
      height: 200rpx;
    }
  } 
}


</style>

<template>
  <view>
    <view class="panel">
      <navigator url="/pages/provider/add_venue" class="last-navigator" 
        hover-class="navigator-hover">{{i.venues_add}}</navigator>
    </view>
    <text class="sub-title">{{i.venues_mine}}</text>
    <view class="venue-panel">
      <navigator url="/pages/provider/edit_venue?venueId={{venue.venueId}}" class="venue-avatar" wx:for="{{venues}}" wx:key="index" wx:for-item="venue">
        <view class="venue-card venue-placeholder">{{venue.name}}</view>        
        <image class="venue-card venue-image" src="{{venue.avatarSrcUrl}}" />
      </navigator>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  import venueService from '@/util/venueService'
  import imageService from '@/util/imageService'

  export default class Venues extends wepy.page {
    config = {
      enablePullDownRefresh: true,
    }
    data = {
      i: amb.pageI18nData,
      venues: [],
    }
    onLoad() {
      wepy.setNavigationBarTitle({
        title: amb.pageI18nData.venues_title
      });

      this.refresh();
    }
    onPullDownRefresh() {
      this.refresh();
    }
    async refresh(){
      wepy.showLoading();
      const venues = await venueService.getMine();
      venues.forEach(x => {
        x.avatarSrcUrl = imageService.getSrcUrl(x.avatarImageId);
      })
      this.updateData({
        venues: venues
      })
      wepy.stopPullDownRefresh();
      wepy.hideLoading();
    }
  }
</script>
