<style lang="less">
</style>

<template>
  <view>
    <view class="search-bar">
      <input placeholder="{{i.search_keywords}}" maxLength="50" bindinput="changeKeyword" value="{{opt.keywords}}"/>
    </view>
    
    <view class="panel">   
      <!-- Start time -->
      <!-- <picker mode="date" value="{{opt.startDate}}" start="2018-01-01" end="2028-12-31" bindchange="startDateChange">  
        <view class="panel-item">
          <text class="label">{{i.activity_start_date}}</text>
          <text class="value">{{opt.startDate}}</text>
        </view>
      </picker>
      <picker mode="date" class="top-line" value="{{opt.endDate}}" start="2018-01-01" end="2028-12-31" bindchange="endDateChange">  
        <view class="panel-item">
          <text class="label">{{i.activity_end_date}}</text>
          <text class="value">{{opt.endDate}}</text>
        </view>
      </picker> -->
      <picker mode="time" class="top-line" value="{{opt.startTime}}" start="06:00" end="20:00" bindchange="startTimeChange">  
        <view class="panel-item">
          <text class="label">{{i.activity_start_time}}</text>
          <text class="value">{{opt.startTime}}</text>
        </view>
      </picker>
      <!-- <picker mode="time" class="top-line" value="{{opt.endTime}}" start="06:00" end="20:00" bindchange="endTimeChange">  
        <view class="panel-item">
          <text class="label">{{i.activity_end_time}}</text>
          <text class="value">{{opt.endTime}}</text>
        </view>
      </picker> -->
      <view class="panel-item panel-item-v">
        <view class="label">{{i.activity_dayofweek}}</view>
        <dow-tag class="value" value="{{opt.daysOfWeek}}" readonly="{{false}}" bindchange="changeDow"></dow-tag>
      </view>
      <view class="panel-item panel-item-v">
        <view class="label">{{i.cat_title}}</view>
        <category-tag class="value" value="{{opt.category}}" readonly="{{false}}" bindchange="changeCategory"></category-tag>
      </view>
    </view>
    
    <view class="panel">
      <view class="panel-item">
        <text class="label">{{i.search_activity_only}}</text>
        <switch class="value" checked="{{opt.freeOnly}}" bindchange="toggleFreeOnly" color="#FFCC00"/>
      </view>
    </view>

    <view class="panel panel-buttons">
      <button class="btn-block btn-primary" @tap="search">{{i.map_search_bar}}</button>
      <button class="btn-block" @tap="gotoMap">{{i.map_button_map}}</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import amb from '@/util/amb'
import ValueSelector from '../components/valueSelector'
import activityService from '@/util/activityService'
import mapService from '@/util/mapService'
import cacheService from "@/util/cacheService";

export default class Filter extends wepy.page {
  config = {
    usingComponents: {
      'dow-tag': '/pages/nativeComponents/dow-tag/dow-tag',
      'category-tag': '/pages/nativeComponents/category-tag/category-tag',
    }
  }
  data = {
    i: amb.pageI18nData,
    opt: {
      keywords: '',
      startDate: '',
      endDate: '',
      startTime: '',
      endTime: '',
      daysOfWeek: 127,
      category: 0,
      freeOnly: false
    },
    geo: {},
    categoryDefinition: [],
    dowDefinition: []
  }
  methods = {
    changeKeyword(e) {
      this.updateData({
        'opt.keywords': e.detail.value
      });
    },
    changeDow(e) {
      this.updateData({
        'opt.daysOfWeek': e.detail.value
      });
    },
    changeCategory(e){
      this.updateData({
        'opt.category': e.detail.value
      });
    },
    startDateChange(e) {
      this.updateData({
        'opt.startDate': e.detail.value
      });
    },
    startTimeChange(e) {
      this.updateData({
        'opt.startTime': e.detail.value
      });
    },
    endDateChange(e) {
      this.updateData({
        'opt.endDate': e.detail.value
      });
    },
    endTimeChange(e) {
      this.updateData({
        'opt.endTime': e.detail.value
      });
    },
    toggleFreeOnly() {
      this.updateData({
        'opt.freeOnly': !this.opt.freeOnly
      });
    },
    async search() {
      let activities;
      try{
        wepy.showLoading({mask: true});
        const coord = await mapService.getCurrentCoordinate();
        const query = Object.assign({
          clat: coord.latitude,
          clng: coord.longitude,
        }, this.opt)

        // Save the query condition
        cacheService.for('search_opt').set(null, this.opt);

        // Clean up query parameters
        Object.keys(query).forEach(k => {
          if(!query[k] && query[k] !== 0) {
            delete query[k];
          }
        })
        activities = await activityService.search(query, true);
        if(activities.length) {
          wepy.navigateBack();
        }
      }finally{
        wepy.hideLoading();
      }

      if(!activities.length) {
        amb.showError(this.i.landing_search_empty, '')
      }
    },
    gotoMap(){
      wepy.navigateTo({
        url: '/pages/search/map'
      })
    },
  }

  onLoad(option) {
    this.setPageUx('searchconfig_title');
  }

  onShow() {
    const categoryDefinition = [
      {
        label: this.i.cat_edu,
        value: 2
      },
      {
        label: this.i.cat_public,
        value: 4
      },
      {
        label: this.i.cat_care,
        value: 8
      },
      {
        label: this.i.cat_playgroup,
        value: 16
      },
      {
        label: this.i.cat_coach,
        value: 32
      },
      {
        label: this.i.cat_entertainment,
        value: 64
      },
      {
        label: this.i.cat_health,
        value: 128
      },
      {
        label: this.i.cat_new,
        value: 256
      },
      {
        label: this.i.cat_stuff,
        value: 512
      },
      {
        label: this.i.cat_other,
        value: 1
      }
    ];
    const dowDefinition = [
    {
      label: this.i.dow_mon_s,
      value: 1
    },
    {
      label: this.i.dow_tue_s,
      value: 2
    },
    {
      label: this.i.dow_wed_s,
      value: 4
    }, 
    {
      label: this.i.dow_thu_s,
      value: 8
    },
    {
      label: this.i.dow_fri_s,
      value: 16
    },{
      label: this.i.dow_sat_s,
      value: 32
    }, 
    {
      label: this.i.dow_sun_s,
      value: 64
    }];

    const cached_opt = cacheService.for('search_opt').get();
    const opt = cached_opt || this.opt;

    this.updateData({
      categoryDefinition,
      dowDefinition,
      opt
    });
  }
}
</script>
