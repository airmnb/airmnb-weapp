<style lang="less">
</style>

<template>
  <view>
    <view class="panel" bindtap="chooseImage">
      <text class="sub-title">{{i.baby_avatar}}</text>
      <image class="avatar-upload" wx:if="{{avatarSrcUrl}}" src="{{avatarSrcUrl}}" mode="aspectFill"/>
      <view class="avatar-upload image-placeholder" wx:else>
        <image src="../../icons/plus-light.svg"/>
      </view>
    </view>
    <view class="panel">
      <input-bar label="{{i.baby_nickname}}" value="{{baby.nickName}}" bindchange="updateNickName" required></input-bar>
    </view>
    <view class="panel">
      <picker mode="date" value="{{baby.dob}}" start="2002-01-01" end="2018-12-31" bindchange="dobChange">  
        <view class="panel-item">
          <text class="label">{{i.dob}}</text>
          <text class="value">{{baby.dob || ''}}</text>
        </view>
      </picker>
      <view class="panel-item">
        <text class="label">{{i.gender}}</text>
        <radio-group class="radio-group" bindchange="setGender">
          <label class="radio">
            <radio value="1" checked="{{baby.gender + '' ==='1'}}" color="#FFCC00"/>{{i.male}}
          </label>
          <label class="radio">
            <radio value="0" checked="{{baby.gender + '' ==='0'}}" color="#FFCC00"/>{{i.female}}
          </label>
        </radio-group>
      </view>
      <navigator url="/pages/controls/textarea?key=baby.info&value={{baby.info || ''}}&label={{i.baby_desc}}" 
        hover-class="navigator-hover">{{i.baby_desc}}
        <text class="value text-ellipsis">{{baby.info || ''}}</text>
      </navigator>
    </view>
    <view class="panel panel-buttons">
      <button class="btn-block btn-primary" bindtap="save">{{i.button_save}}</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import amb from '@/util/amb';
import imageService from '@/util/imageService'
import babyService from '@/util/babyService'

export default class AddBaby extends wepy.page {
  config = {
    enablePullDownRefresh: false,
    usingComponents: {
      'input-bar': '/pages/nativeComponents/input-bar/input-bar'
    }
  }
	data = {
    addMode: false,
    i: amb.pageI18nData,
    baby: null,
    avatarSrcUrl: null
  };
  methods = {
    async chooseImage() {
      const imageIds = await imageService.chooseImage(1);
      const imageId = imageIds[0];
      const srcUrl = imageService.getSrcUrl(imageId);
      this.updateData({
        'avatarSrcUrl': srcUrl,
        'baby.avatarImageId': imageId
      });
    },
    updateNickName(e){
      this.updateData({
        'baby.nickName': e.detail.value
      });
    },
    setGender(e) {
      this.updateData({
        'baby.gender': parseInt(e.detail.value),
      });
    },
    dobChange(e) {
      this.updateData({
        'baby.dob': e.detail.value
      });
    },
    async save() {
      // Required fileds check
      if(!this.checkRequiredFiled()) return;
      try{
        wepy.showLoading();
        console.log('baby to save', this.baby);
        if(this.addMode) {
          await babyService.add(this.baby);
        }else{
          await babyService.update(this.baby);
        }

        // Refresh parent page
        const pages = getCurrentPages();
        const parentPage = pages[pages.length-2];
        parentPage.refresh();
    
        wepy.navigateBack();
      }catch(e){
        amb.showError(e)
      }finally{
        wepy.hideLoading();
      }
    }
  }
	onLoad(options) {
    const babyId = options.babyId;
    this.addMode = !babyId;
		this.setPageUx(this.addMode ? 'addbaby_title' : 'editbaby_title');
    if(this.addMode) {
      this.baby = {
        nickName: '',
        gender: '',
        dob: '',
        info: '',
        avatarImageId: null
      };
      this.avatarSrcUrl = null;
    }else{
      this.loadBaby(babyId);
    }
  }
  async loadBaby(babyId){
    wepy.showLoading();
    const baby = await babyService.get(babyId);
    this.updateData({
      baby: baby,
      avatarSrcUrl: imageService.getSrcUrl(baby.avatarImageId)
    })
    wepy.stopPullDownRefresh();
    wepy.hideLoading();
  }
  checkRequiredFiled() {
    return amb.checkRequired(this.baby, {
      'nickName': this.i.baby_nickname
    });
  }
}
</script>
