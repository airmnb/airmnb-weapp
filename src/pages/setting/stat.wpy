<style lang="less">
  .label {
    flex: none;
    white-space: nowrap;
  }
  .value {
    flex: none;
  }
</style>

<template>
  <view>
    <view class="panel">
      <view class="panel-item">
        <text class="label">{{i.stat_users}}</text>
        <text class="value">{{stat.userCount}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i.stat_babies}}</text>
        <text class="value">{{stat.babyCount}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i.stat_providers}}</text>
        <text class="value">{{stat.providerCount}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i.stat_activities}}</text>
        <text class="value">{{stat.activityCount}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i.stat_bookings}}</text>
        <text class="value">{{stat.bookingCount}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i.stat_transactions}}</text>
        <text class="value">{{stat.transactionCount}}</text>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  import {apiClient} from "@/util/restClient";

  export default class Stat extends wepy.page {
    config = {
      enablePullDownRefresh: true,
    }
    data = {

      stat: {
        userCount: '...',
        babyCount: '...',
        providerCount: '...',
        activityCount: '...',
        bookingCount: '...',
        transactionCount: '...',
      },
      i: amb.pageI18nData
    }

    methods = {
    }

    onLoad() {
  		this.setPageUx('stat_title');
      this.loadData(); 
    }

    onPullDownRefresh() {
      // wepy.showLoading();
      // const self = this;
      // this.userCount = Math.floor((Math.random() * 1000) + 1);
      // this.babyCount = Math.floor((Math.random() * 1000) + 1);
      // this.providerCount = Math.floor((Math.random() * 1000) + 1);
      // this.activityCount = Math.floor((Math.random() * 1000) + 1);
      // this.bookingCount = Math.floor((Math.random() * 1000) + 1);
      // this.transactionCount = Math.floor((Math.random() * 1000) + 1);
      // // self.$apply()
      // wepy.hideLoading();
      // wepy.stopPullDownRefresh();
      this.loadData(); 
    }

    async loadData() {
      wepy.showLoading();
      const resp = await apiClient.get(`stat`);
      if(resp.error) {
        throw new Error(resp.error);
      }
      this.updateData({
        stat: resp.stat
      });
      wepy.hideLoading();
      wepy.stopPullDownRefresh();      
    }
  }
</script>
