<style lang="less">
  .label {
    flex: none;
    white-space: nowrap;
  }
  .value {
    flex: none;
  }
</style>

<template>
  <view>
    <view class="panel">
      <view class="panel-item">
        <text class="label">{{i_users}}</text>
        <text class="value">{{totalUsers}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i_babies}}</text>
        <text class="value">{{totalBabies}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i_providers}}</text>
        <text class="value">{{totalProviders}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i_activities}}</text>
        <text class="value">{{totalActivities}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i_bookings}}</text>
        <text class="value">{{totalBookings}}</text>
      </view>
      <view class="panel-item">
        <text class="label">{{i_transactions}}</text>
        <text class="value">{{totalTransactions}}</text>
      </view>
    </view>
    <view class="panel">  
      <view class="panel-item">
        <button @tap="refresh">{{i_refresh}}</button>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  export default class Stat extends wepy.page {
    data = {
      totalUsers: '...',
      totalBabies: '...',
      totalProviders: '...',
      totalActivities: '...',
      totalBookings: '...',
      totalTransactions: '...',
      i_users: "stat_users".i,
      i_refresh: "stat_refresh".i,
      i_babies: "stat_babies".i,
      i_providers: "stat_providers".i,
      i_activities: "stat_activities".i,
      i_bookings: "stat_bookings".i,
      i_transactions: "stat_transactions".i
    }

    methods = {
      refresh() {
        this.refreshStat();
      }
    }

    onLoad() {
      wepy.setNavigationBarTitle({
        title: "stat_title".i
      });
      this.refreshStat();
    }

    async refreshStat() {
      const self = this;
      this.totalUsers = Math.floor((Math.random() * 1000) + 1);
      this.totalBabies = Math.floor((Math.random() * 1000) + 1);
      this.totalProviders = Math.floor((Math.random() * 1000) + 1);
      this.totalActivities = Math.floor((Math.random() * 1000) + 1);
      this.totalBookings = Math.floor((Math.random() * 1000) + 1);
      this.totalTransactions = Math.floor((Math.random() * 1000) + 1);
      console.log(this);
      self.$apply()
    }
  }
</script>
