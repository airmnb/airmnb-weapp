<style lang="less">
@gray: #D5D5D5;
.baby-panel {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: left;
  flex-wrap: wrap;
  justify-content: space-around;
}
.baby-avatar {
  // width: 200rpx;
  // height: 200rpx;

  flex-grow: 1;
  width: 33%;
  position: relative;
  top: 0;
  left: 0;

  .baby-card {
    margin: 20rpx;
    width: 200rpx;
    height: 200rpx;
    border-radius: 10rpx;

    &.baby-placeholder {
      outline: 2rpx dashed @gray;
      outline-offset: -2rpx;
      display: flex;
      align-items: center;
      justify-content: center;
      color: @gray;
    }

    &.baby-image {
      position: absolute;
      top: 0;
      left: 0;
      width: 200rpx;
      height: 200rpx;
    }
  } 
}


</style>

<template>
  <view>
    <view class="panel">
      <navigator url="/pages/setting/add_baby" class="last-navigator" 
        hover-class="navigator-hover">{{i.babies_add}}</navigator>
    </view>
    <text class="sub-title">{{i.babies_mine}}</text>
    <view class="baby-panel">
      <view class="baby-avatar" wx:for="{{babies}}" wx:key="index" wx:for-item="baby">
        <view class="baby-card baby-placeholder">{{baby.nickName}}</view>        
        <image class="baby-card baby-image" src="{{baby.avatarSrcUrl}}" />
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import amb from '@/util/amb'
  import babyService from '@/util/babyService'
  import imageService from '@/util/imageService'

  export default class Babies extends wepy.page {
    config = {
      enablePullDownRefresh: true,
    }
    data = {
      i: amb.pageI18nData,
      babies: [],
      parentTitle: 'p-title'
    }
    async onLoad() {
      console.log('babies onLoad');
      wepy.setNavigationBarTitle({
        title: amb.pageI18nData.babies_title
      });

      await this.refreshBabies();
    }
    onShow(){
      console.log('babies onShow');
    }
    async onPullDownRefresh() {
      await this.refreshBabies();
    }
    attachImageUrlProps(){
      this.babies.forEach(x => {
        x.avatarSrcUrl = imageService.getSrcUrl(x.avatarImageId);
      })
    }
    async refreshBabies(){
      wepy.showLoading();
      this.babies = await babyService.getMine();
      this.attachImageUrlProps();
      wepy.hideLoading();
    }
  }
</script>
