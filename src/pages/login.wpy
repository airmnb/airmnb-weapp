<style lang="less">
page {
  height: 100%;
  width: 100%;

  & view.view-width {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    // justify-content: center;
    align-content: center;
  }
}

.logo {
  font-size: x-large;
  text-align: center;
  margin: 100rpx 0 100rpx 0;
}

</style>

<template>
  <view class="view-width">
    <text class="logo">{{i.welcome_title}}</text>
    <view class="view-width" wx:if="{{!loading || true}}">
      <text class="sub-title">{{i.login_use_wechat}}</text>
      <view class="panel">
        <view class="panel-item warning">
          <button open-type="getUserInfo" bindgetuserinfo="loginWithWechat">{{i.login_title}}</button>
        </view>
      </view>
      <text class="sub-title">{{i.login_choose_language}}</text>
      <view class="panel panel-language">
        <view class="panel-item">
          <button @tap="chooseChinese">简体中文</button>
        </view>
        <view class="panel-item">
          <button @tap="chooseEnglish">English</button>
        </view>
      </view>
    </view>
  </view>
  
</template>
<script>
import wepy from 'wepy'
import amb from '@/util/amb'
import loginService from '@/util/loginService'

export default class LoginPage extends wepy.page {
  data = {
    i: null,
    loading: true
  }

  methods = {
    loginWithWechat(e) {
      const wechatUserInfo = e.detail.userInfo;
      this.wechatLogin(wechatUserInfo)
    },
    chooseChinese() {
      amb.chooseLanguage('zh_CN')
      this.setPageUx('map_title')
    },
    chooseEnglish() {
      amb.chooseLanguage('en')
      this.setPageUx('map_title')
    }
  }

  async wechatLogin(wechatUserInfo) {
    wepy.showLoading({mask: true})
    await loginService.login(wechatUserInfo)
    wepy.switchTab({
      url: '/pages/search/landing'
    })
  }

  async onLoad() {
    wepy.showLoading({mask: true})
    try {
      this.setPageUx('map_title')
      await this.immidiateLogin()
    } catch (e) {
      console.log('login error', e);
      const error = JSON.stringify(e);
      this.updateData({
        error
      })
    } finally {
      wepy.hideLoading()
    }
  }

  async immidiateLogin() {
    await loginService.login()
    wepy.switchTab({
      url: '/pages/search/landing'
    })
  }

  async loadWithManualLogin() {
    const hasSession = await loginService.checkSession()
    if (hasSession) {
      await loginService.login()
      wepy.switchTab({
        url: '/pages/search/landing'
      })
      return
    }

    this.updateData({
      loading: false
    })
  }
}
</script>
